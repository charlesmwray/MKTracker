{"version":3,"sources":["images/cups/banana.png","images/cups/bell.png","images/cups/crossing.png","images/cups/flower.png","images/cups/leaf.png","images/cups/lightning.png","images/cups/mushroom.png","images/cups/shell.png","images/cups/special.png","images/cups/star.png","images/cups/triforce.png","images/cups/yoshi.png","data/Firebase.js","data/Cups.js","components/enterScore.js","components/scoresByCup.js","components/leaderBoard.js","components/profile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","provider","auth","GoogleAuthProvider","Cups","mushroom","flower","star","special","yoshi","crossing","shell","banana","leaf","lightning","triforce","bell","CupRow","props","cups","length","map","cup","react_default","a","createElement","Col","xs","key","onClick","selectCup","className","selectedCup","src","EnterScore","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handlePointsChange","bind","assertThisInitialized","state","cupValue","itemsRef","Firebase","database","ref","pointsValue","push","uid","userInfo","points","date","Date","toDateString","username","displayName","photoURL","toggleAddScore","e","setState","target","value","parseInt","_this2","style","margin","Grid","Row","sm","FormGroup","validationState","getPointsValidationState","ControlLabel","FormControl","type","prixPoints","placeholder","onChange","bsSize","enterScore_CupRow","textAlign","marginTop","Button","bsStyle","marginRight","saveScore","Component","ScoresByCup","ScoreKeys","keys","scores","parsedScores","scoresByCup","s","filter","c","avg","cupScores","sbc","console","log","reduce","arguments","undefined","b","toFixed","padding","cursor","Scores","score","i","labels","placement","scoresData","slice","Math","max","j","OverlayTrigger","trigger","overlay","Popover","id","title","apply","reverse","index","replace","ScoreToolTip","scope","href","showScoresByCup","fontSize","color","avgScore","avgLast10","width","height","es","data","datasets","label","backgroundColor","options","responsive","legend","display","scales","xAxes","LeaderBoard","userData","on","snapshot","val","windowGames","uids","players","all","windowTotal","forEach","k","un","indexOf","player","parsedStats","sort","showScoresByCupUid","showScoresByCupUsername","toggleShowScoresByCup","_this3","Tabs","Tab","eventKey","leaderBoard_Scores","smOffset","lgOffset","lg","components_scoresByCup","Modal","show","Header","Title","Body","Footer","Profile","set","then","toggleProfile","_this4","aria-labelledby","handleUsernameChange","saveUsername","App","defineProperty","showAddScore","showProfile","onAuthStateChanged","user","setUser","signInWithPopup","login","flexDirection","alignItems","justifyContent","ButtonGroup","borderRadius","enterScore","leaderBoard","profile","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.55913e87.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/banana.b99b8ad2.png\";","module.exports = __webpack_public_path__ + \"static/media/bell.fef4ae6e.png\";","module.exports = __webpack_public_path__ + \"static/media/crossing.866816b0.png\";","module.exports = __webpack_public_path__ + \"static/media/flower.b1b2b376.png\";","module.exports = __webpack_public_path__ + \"static/media/leaf.c0c3172d.png\";","module.exports = __webpack_public_path__ + \"static/media/lightning.673806fd.png\";","module.exports = __webpack_public_path__ + \"static/media/mushroom.7d0b0a51.png\";","module.exports = __webpack_public_path__ + \"static/media/shell.9e99f361.png\";","module.exports = __webpack_public_path__ + \"static/media/special.09f43aed.png\";","module.exports = __webpack_public_path__ + \"static/media/star.63ba072a.png\";","module.exports = __webpack_public_path__ + \"static/media/triforce.bff35bea.png\";","module.exports = __webpack_public_path__ + \"static/media/yoshi.2202dd48.png\";","import firebase from 'firebase';\n\nconst config = {\n    apiKey: \"AIzaSyCUVExBS8-J9U458sNtB95fwzQNBPSl5Rk\",\n    authDomain: \"mctracker-42d0f.firebaseapp.com\",\n    databaseURL: \"https://mctracker-42d0f.firebaseio.com\",\n    projectId: \"mctracker-42d0f\",\n    storageBucket: \"mctracker-42d0f.appspot.com\",\n    messagingSenderId: \"218378060918\"\n};\n\nfirebase.initializeApp(config);\n\nexport const provider = new firebase.auth.GoogleAuthProvider();\nexport const auth = firebase.auth();\nexport default firebase;\n","import banana from '../images/cups/banana.png';\nimport bell from '../images/cups/bell.png';\nimport crossing from '../images/cups/crossing.png';\nimport flower from '../images/cups/flower.png';\nimport leaf from '../images/cups/leaf.png';\nimport lightning from '../images/cups/lightning.png';\nimport mushroom from '../images/cups/mushroom.png';\nimport shell from '../images/cups/shell.png';\nimport special from '../images/cups/special.png';\nimport star from '../images/cups/star.png';\nimport triforce from '../images/cups/triforce.png';\nimport yoshi from '../images/cups/yoshi.png';\n\nexport default [\n    [mushroom,'mushroom'],\n    [flower,'flower'],\n    [star,'star'],\n    [special,'special'],\n    [yoshi,'yoshi'],\n    [crossing,'crossing'],\n    [shell,'shell'],\n    [banana,'banana'],\n    [leaf,'leaf'],\n    [lightning,'lightning'],\n    [triforce,'triforce'],\n    [bell,'bell']\n]\n","import React, { Component } from 'react';\n\nimport Firebase from '../data/Firebase.js';\nimport Cups from '../data/Cups.js';\n\nimport {\n    FormGroup,\n    ControlLabel,\n    FormControl,\n    HelpBlock,\n    Grid,\n    Row,\n    Col,\n    Button\n} from 'react-bootstrap';\n\nconst CupRow = (props) => {\n    if (props && props.cups && props.cups.length) {\n        return props.cups.map((cup)=>{\n            return <Col\n                xs={2}\n                key={cup[1]}\n                onClick={()=>{props.selectCup(cup[1])}}\n                className={ cup[1] === props.selectedCup ? 'cup-row active' : 'cup-row' }\n            >\n                <img src={cup[0]} className=\"cup-image\" />\n            </Col>;\n        });\n    } else {\n        return 'null';\n    }\n}\n\nclass EnterScore extends Component {\n  constructor(props) {\n      super(props);\n\n      this.handlePointsChange = this.handlePointsChange.bind(this);\n      this.selectCup = this.selectCup.bind(this);\n\n      this.state = {\n          cupValue: null\n      };\n  }\n\n  saveScore() {\n      let itemsRef = Firebase.database().ref('scores/');\n\n      if (this.state.pointsValue <= 60 && this.state.cupValue) {\n          itemsRef.push({\n              uid: this.props.userInfo.uid,\n              points: this.state.pointsValue,\n              cup: this.state.cupValue,\n              date: new Date().toDateString(),\n              username: this.props.userInfo.displayName,\n              photoURL: this.props.userInfo.photoURL\n          });\n\n          this.props.toggleAddScore();\n      }\n  }\n\n  handlePointsChange(e) {\n      this.setState({ pointsValue: e.target.value });\n  }\n\n  selectCup(cup) {\n      this.setState({ cupValue: cup });\n  }\n\n  getPointsValidationState() {\n      const pointsValue = parseInt(this.state.pointsValue);\n      if (pointsValue > 60 || pointsValue < 4) {\n          return 'error';\n      } else if (pointsValue !== null ) {\n          return 'success';\n      } else {\n          return null;\n      }\n  }\n\n  render() {\n    return (\n        <form style={{margin: '2rem 0'}}>\n            <Grid>\n                <Row>\n                    <Col xs={12} sm={1}>\n                        <FormGroup validationState={this.getPointsValidationState()}>\n                            <ControlLabel>Points</ControlLabel>\n                            <FormControl\n                                type=\"text\"\n                                value={this.state.prixPoints}\n                                placeholder=\"\"\n                                onChange={this.handlePointsChange}\n                                bsSize=\"large\"\n                            />\n                        </FormGroup>\n                    </Col>\n                    <Col xs={12} sm={11}>\n                        <Row>\n                            <CupRow\n                                selectCup={this.selectCup}\n                                selectedCup={this.state.cupValue}\n                                cups={Cups}\n                            />\n                        </Row>\n                    </Col>\n                    <Col xs={12} style={{ textAlign:'right', marginTop: '2rem' }}>\n                        <Button\n                            bsStyle=\"danger\"\n                            onClick={() => { this.props.toggleAddScore() }}\n                            style={{marginRight: '1rem'}}\n                        >\n                            Cancel\n                        </Button>\n                        <Button\n                            bsStyle=\"primary\"\n                            onClick={() => { this.saveScore() }}\n                        >\n                            Add Score\n                        </Button>\n                    </Col>\n                </Row>\n            </Grid>\n        </form>\n    );\n  }\n}\n\nexport default EnterScore;\n","import React, { Component } from 'react';\n\nimport {\n    Row,\n    Col\n} from 'react-bootstrap';\n\nimport Cups from '../data/Cups.js';\n\nconst ScoresByCup = (props) => {\n    let ScoreKeys = Object.keys(props.scores);\n    let parsedScores = [];\n    let thisUsersScores = [];\n    let scoresByCup = {};\n\n    ScoreKeys.map(s => {\n        parsedScores.push(props.scores[s]);\n    });\n\n    if (props.uid) {\n        parsedScores = parsedScores.filter(s => {\n            return s.uid === props.uid;\n        });\n    }\n\n    Cups.map(c => {\n        scoresByCup[c[1]] = parsedScores.filter(s => {\n            return s.cup === c[1]\n        });\n    });\n\n    return Cups.map(c => {\n        let cupScores = [];\n        let avg;\n\n        scoresByCup[c[1]].map(sbc => {\n            console.log(sbc);\n            cupScores.push(sbc.points);\n        });\n\n        avg = cupScores.length ? (cupScores.reduce((a = 0,b = 0) => parseInt(a) + parseInt(b)) / cupScores.length).toFixed(2) : 'none';\n\n\n        return (\n            <Col\n                xs={2}\n                key={c[1]}\n                className=\"cup-row\"\n                style={{\n                    padding: '.75rem',\n                    cursor: 'default'\n                }}\n            >\n                <img src={[c[0]]} className=\"cup-image\" /><span>{avg}</span>\n            </Col>\n        )\n    })\n}\n\nexport default ScoresByCup;\n","import React, { Component } from 'react';\n\nimport firebase from '../data/Firebase.js';\n\nimport ScoresByCup from './scoresByCup.js';\n\nimport { Line } from 'react-chartjs-2';\n\nimport {\n    Popover,\n    OverlayTrigger,\n    Modal,\n    Button,\n    Row,\n    Col,\n    Tabs,\n    Tab\n} from 'react-bootstrap';\n\nconst CupArray = (props) => {\n    return props.cups.map((cup) => {\n        return <span>{cup}</span>\n    })\n}\n\nconst ScoreToolTip = (score) => {\n    let scores = score.scores\n    return (\n        <Popover id=\"popover-trigger-hover-focus\" title={score.username+\" score details\"}>\n            Top score: <b>{ Math.max.apply(Math, scores) }</b><br/>\n            Games played: { scores.length }<br/>\n            Last 10 scores:\n            <ul>\n                {\n                    // Returns the latest 10 scores\n                    scores.slice(Math.max(scores.length - 10, 0)).reverse().map((value, index) => {\n                        return (\n                            <li key={index} >\n                                {value.replace(/^0+/, '')}\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        </Popover>\n    )\n}\nconst Scores = (props) => {\n    if (props.length === 0) {\n        return '...loading'\n    } else {\n        return  (\n            props.scores.map((score,  i) => {\n                let labels = [];\n                let placement = i > 3 ? 'top' : 'bottom';\n                const scoresData = score.scores.slice(Math.max(score.scores.length - 10, 0)) || [];\n                for (var j = 0; j < scoresData.length; j++) {\n                    labels.push(scoresData[j]);\n                }\n                return (\n                    <OverlayTrigger trigger={['hover', 'focus']} placement={placement} overlay={ScoreToolTip\n                        (score)} key={i}>\n                        <tr >\n                            <th scope=\"row\">{i+1}</th>\n                            <td>\n                                <a href=\"#\" onClick={() => { props.showScoresByCup(score.uid, score.username) }}>\n                                    {score.username}\n                                </a>\n                                {\n                                    score.date &&\n                                    <div style={{\n                                        fontSize: '1.25rem',\n                                        color: '#999'\n                                    }}>Last updated: {score.date}</div>\n                                }\n                            </td>\n                            <td>{score.avgScore.toFixed(1)}</td>\n                            <td>{score.avgLast10.toFixed(1)}</td>\n                            <td style={{\n                                width: '70px',\n                                height: '50px'\n                            }} className=\"hidden-xs\">\n                                <Line\n                                    width={200}\n                                    height={80}\n                                    data={{\n                                        labels: labels.reverse(),\n                                        datasets: [{\n                                          label: 'All scores',\n                                          data: scoresData,\n                                          backgroundColor: \"#ff5722\"\n                                        }]\n                                    }}\n                                    options={{\n                                        responsive: true,\n                                        legend: {\n                                            display: false\n                                        },\n                                        scales:{\n                                            xAxes: [{\n                                                display: false //this will remove all the x-axis grid lines\n                                            }]\n                                        }\n                                    }}\n                                />\n                            </td>\n                        </tr>\n                    </OverlayTrigger>\n                )\n            })\n        );\n    }\n};\n\nclass LeaderBoard extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n            scores: [],\n            showScoresByCup: false\n        };\n    }\n\n    componentDidMount() {\n        const scoresData = firebase.database().ref('scores/');\n        const userDataRef = firebase.database().ref('users/');\n        let userData;\n\n        userDataRef.on('value', (snapshot) => {\n            userData = snapshot.val();\n\n            scoresData.on('value', (snapshot) => {\n                const data = snapshot.val();\n                const keys = Object.keys(data);\n                let scores = [];\n                let uids = [];\n                let players = [];\n                let all = [];\n                let windowGames;\n                let windowTotal = 0;\n\n                keys.forEach((k) => {\n                    scores.push(data[k]);\n                });\n\n                scores.map((s) => {\n                    let un = userData[s.uid] ? userData[s.uid].username : s.username;\n                    if (uids.indexOf(s.uid) === -1){\n                        uids.push(s.uid);\n                        players.push([un, s.uid])\n                    }\n                });\n\n                uids.map((player, i) => {\n                    var parsedStats = {\n                        scores:[],\n                        cups:[],\n                        avgScore: 0,\n                        avgLast10: 0,\n                        username: players[i][0],\n                        uid: players[i][1],\n                        date: ''\n                    };\n\n                    scores.map((s)=>{\n                    \tif (s.uid === uids[i]) {\n                    \t    parsedStats['scores'].push(s.points);\n                            parsedStats['cups'].push(s.cup);\n\n                            parsedStats['date'] = s.date;\n                    \t}\n                    });\n\n                    parsedStats['avgScore'] = parsedStats['scores'].reduce((a,b) => { return parseInt(a) + parseInt(b);  }) /  parsedStats['scores'].length;\n\n                    // Avg score over last 10 games\n    \t\t\t\twindowGames = parsedStats['scores'].length > 10 ? 10 : parsedStats['scores'].length;\n    \t\t\t\twindowTotal = 0;\n    \t\t\t\tfor (var i = 0; i < windowGames; i++) {\n                        windowTotal = windowTotal + parseInt(parsedStats['scores'][ parsedStats['scores'].length - 1 - i]);\n                    }\n                    parsedStats['avgLast10'] = windowTotal/windowGames;\n\n    \t\t\t\tparsedStats['avgScore'] = parsedStats['scores'].reduce((a,b) => { return parseInt(a) + parseInt(b);  }) /  parsedStats['scores'].length;\n                    all.push(parsedStats);\n                });\n\n                this.setState({\n                    scores: all.sort((a, b) => {\n                        if (a.avgScore > b.avgScore) {\n                            return -1;\n                        } else if (a.avgScore < b.avgScore) {\n                            return 1;\n                        } else {\n                            return 0;\n                        }\n                    })\n                })\n            });\n        });\n    }\n\n    toggleShowScoresByCup() {\n        this.setState({\n            showScoresByCup: !this.state.showScoresByCup\n        })\n    }\n\n    showScoresByCup(uid, username) {\n        this.setState({\n            showScoresByCupUid: uid,\n            showScoresByCupUsername: username\n        })\n\n        this.toggleShowScoresByCup();\n    }\n\n    render() {\n        return  <div>\n            <Tabs>\n                <Tab eventKey={1} title=\"Leaderboard\">\n                    <table\n                        className=\"table table-striped\"\n                        style={{\n                            marginTop: '2rem'\n                        }}\n                    >\n                        <thead>\n                            <tr>\n                                <th scope=\"col\">Rank</th>\n                                <th scope=\"col\">Player</th>\n                                <th scope=\"col\">Average Score</th>\n                                <th scope=\"col\">Last 10</th>\n                                <th scope=\"col\" className=\"hidden-xs\"></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <Scores\n                                scores={this.state.scores}\n                                showScoresByCup={this.showScoresByCup.bind(this)}\n                            />\n                        </tbody>\n                    </table>\n                </Tab>\n                <Tab eventKey={2} title=\"Scores By Cup\">\n                    <Row>\n                        <Col\n                            xs={12}\n                            smOffset={1} sm={10}\n                            lgOffset={2} lg={8}\n                            style={{\n                                marginTop: '2rem'\n                            }}\n                        >\n                            <ScoresByCup scores={this.props.scores} />\n                        </Col>\n                    </Row>\n                </Tab>\n            </Tabs>\n            <Modal\n              show={this.state.showScoresByCup}\n              bsSize=\"large\"\n            >\n                <Modal.Header>\n                    <Modal.Title>{this.state.showScoresByCupUsername + '\\'s'} average scores</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Row style={{\n                        padding: '2rem',\n                    }}>\n                        <ScoresByCup\n                            scores={this.props.scores}\n                            uid={this.state.showScoresByCupUid}\n                        />\n                    </Row>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button onClick={()=>{ this.toggleShowScoresByCup() }}>Close</Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    }\n}\n\nexport default LeaderBoard;\n","import React, { Component } from 'react';\n\nimport Firebase from '../data/Firebase.js';\n\nimport ScoresByCup from './scoresByCup.js';\n\nimport {\n    Modal,\n    Button,\n    Row,\n    Col,\n    FormGroup,\n    ControlLabel,\n    FormControl\n} from 'react-bootstrap';\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            uid: props.uid,\n            username: ''\n        }\n    }\n    componentWillMount() {\n        let userInfo = Firebase.database().ref('users/' + this.state.uid);\n\n        userInfo.on('value', (snapshot) => {\n            userInfo = snapshot.val();\n\n            if (userInfo) {\n                this.setState({\n                    username: userInfo.username\n                })\n            }\n        });\n    }\n    handleUsernameChange(e) {\n        this.setState({\n            username: e.target.value\n        })\n    }\n    saveUsername() {\n        let userInfo = Firebase.database().ref('users/' + this.state.uid);\n        let userInfoUpdate = {}\n\n        userInfo.set({\n            username: this.state.username\n        }).then(()=>{\n            this.props.toggleProfile();\n        });\n    }\n    render() {\n        return (\n            <Modal\n              show={true}\n              bsSize=\"large\"\n              aria-labelledby=\"contained-modal-title-lg\"\n            >\n              <Modal.Header>\n                  <Modal.Title id=\"contained-modal-title-lg\">My Profile</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                  <Row>\n                      <Col xs={12} lg={4}>\n                          <h2>Details</h2>\n                          <FormGroup validationState={null}>\n                              <ControlLabel>Username</ControlLabel>\n                              <FormControl\n                                  type=\"text\"\n                                  value={this.state.username}\n                                  onChange={(e)=>{this.handleUsernameChange(e)}}\n                                  bsSize=\"large\"\n                              />\n                          </FormGroup>\n                      </Col>\n                      <Col xs={12} lg={8}>\n                          <h2>Scores by cup</h2>\n                          <Row style={{\n                              padding: '2rem'\n                          }}>\n                              <ScoresByCup\n                                  scores={this.props.scores}\n                                  uid={this.props.uid}\n                              />\n                          </Row>\n                      </Col>\n                  </Row>\n              </Modal.Body>\n              <Modal.Footer>\n                  <Button onClick={()=>{ this.props.toggleProfile() }}>Close</Button>\n                  <Button bsStyle=\"primary\" onClick={()=>{ this.saveUsername() }}>Save</Button>\n              </Modal.Footer>\n            </Modal>\n        )\n    }\n}\n\nexport default Profile;\n","import React, { Component } from 'react';\n\nimport './App.css';\n\nimport firebase, { auth, provider } from './data/Firebase.js';\n\nimport {\n    Button,\n    ButtonGroup,\n    Row,\n    Col\n} from 'react-bootstrap';\n\nimport EnterScore from './components/enterScore.js';\nimport LeaderBoard  from './components/leaderBoard.js';\nimport Profile from './components/profile.js';\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            userInfo: null,\n            showAddScore: false,\n            showProfile: false,\n            userInfo: null\n        }\n    }\n    componentDidMount() {\n        !this.state.userInfo && auth.onAuthStateChanged((user) => {\n            user && this.setUser(user);\n        });\n\n        firebase.database().ref('scores/').on('value', (snapshot) => {\n            if (snapshot) {\n                this.setState({\n                    scoresData: snapshot.val()\n                });\n            }\n        });\n    }\n    login() {\n        auth.signInWithPopup(provider);\n    }\n    setUser(userInfo) {\n        !this.state.userInfo && this.setState({ userInfo: userInfo });\n    }\n    toggleAddScore() {\n        this.setState({\n            showAddScore: !this.state.showAddScore\n        });\n    }\n    toggleProfile() {\n        this.setState({\n            showProfile: !this.state.showProfile\n        })\n    }\n    render() {\n        return (\n            <div className=\"App container\">\n                <header className=\"App-header\">\n                    <Row>\n                        <Col xs={12} sm={8}>\n                            <h1>Mario Kart Tracker</h1>\n                        </Col>\n                        <Col xs={12} sm={4}>\n                            {!this.state.userInfo && <Button bsStyle=\"primary\" onClick={() => {this.login()}}>Log In</Button>}\n                            {\n                                this.state.userInfo &&\n                                <div\n                                    className=\"align-right\"\n                                    style={{\n                                        display: 'flex',\n                                        flexDirection: 'row',\n                                        alignItems: 'center',\n                                        justifyContent: 'flex-end'\n                                    }}>\n                                    <ButtonGroup>\n                                        <Button bsStyle=\"primary\" onClick={() => {this.toggleAddScore()}}>Add Score</Button>\n                                        <Button bsStyle=\"info\" onClick={() => { this.toggleProfile() }}>Profile</Button>\n                                    </ButtonGroup>\n                                    <img\n                                        style={{\n                                            margin: '1rem',\n                                            width: '50px',\n                                            height: '50px',\n                                            borderRadius: '50%'\n                                        }}\n                                        src={this.state.userInfo.photoURL}\n                                    />\n                                </div>\n                            }\n                        </Col>\n                    </Row>\n                </header>\n                {\n                    this.state.userInfo &&\n                    <div>\n                        {\n                            this.state.showAddScore &&\n                            <EnterScore\n                                userInfo={this.state.userInfo}\n                                toggleAddScore={this.toggleAddScore.bind(this)}\n                            />\n                        }\n                    </div>\n                }\n                {\n                    this.state.scoresData &&\n                    <LeaderBoard scores={this.state.scoresData} />\n                }\n                {\n                    this.state.showProfile &&\n                    <Profile\n                        uid={this.state.userInfo.uid}\n                        scores={this.state.scoresData}\n                        toggleProfile={this.toggleProfile.bind(this)}\n                    />\n                }\n\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}