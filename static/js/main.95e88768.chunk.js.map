{"version":3,"sources":["images/cups/banana.png","images/cups/bell.png","images/cups/crossing.png","images/cups/flower.png","images/cups/leaf.png","images/cups/lightning.png","images/cups/mushroom.png","images/cups/shell.png","images/cups/special.png","images/cups/star.png","images/cups/triforce.png","images/cups/yoshi.png","data/Firebase.js","components/enterScore.js","components/leaderBoard.js","components/profile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","provider","auth","GoogleAuthProvider","CupRow","props","cups","length","map","cup","react_default","a","createElement","Col","xs","sm","key","onClick","selectCup","style","padding","borderRadius","backgroundColor","selectedCup","textAlign","cursor","src","className","EnterScore","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handlePointsChange","bind","assertThisInitialized","state","cupValue","itemsRef","database","ref","pointsValue","push","uid","userInfo","points","date","Date","username","displayName","photoURL","toggleAddScore","e","setState","target","value","parseInt","_this2","margin","Grid","Row","FormGroup","validationState","getPointsValidationState","ControlLabel","FormControl","type","prixPoints","placeholder","onChange","bsSize","enterScore_CupRow","mushroom","flower","star","special","yoshi","crossing","shell","banana","leaf","lightning","triforce","bell","marginTop","Button","bsStyle","marginRight","saveScore","Component","Scores","scores","score","i","labels","placement","j","OverlayTrigger","trigger","overlay","Popover","id","title","Math","max","apply","slice","min","index","replace","ScoreToolTip","scope","avgScore","toFixed","avgLast10","width","height","es","data","datasets","label","options","responsive","legend","display","scales","xAxes","LeaderBoard","scoresData","userDataRef","userData","on","snapshot","val","windowGames","keys","uids","players","all","windowTotal","forEach","k","s","un","indexOf","player","parsedStats","reduce","b","sort","leaderBoard_Scores","Profile","_this3","set","then","toggleProfile","_this4","Modal","show","aria-labelledby","Header","Title","Body","handleUsernameChange","Footer","saveUsername","App","defineProperty","showAddScore","showProfile","onAuthStateChanged","user","setUser","signInWithPopup","login","ButtonGroup","components_enterScore","leaderBoard","profile","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.95e88768.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/banana.b99b8ad2.png\";","module.exports = __webpack_public_path__ + \"static/media/bell.fef4ae6e.png\";","module.exports = __webpack_public_path__ + \"static/media/crossing.866816b0.png\";","module.exports = __webpack_public_path__ + \"static/media/flower.b1b2b376.png\";","module.exports = __webpack_public_path__ + \"static/media/leaf.c0c3172d.png\";","module.exports = __webpack_public_path__ + \"static/media/lightning.673806fd.png\";","module.exports = __webpack_public_path__ + \"static/media/mushroom.7d0b0a51.png\";","module.exports = __webpack_public_path__ + \"static/media/shell.9e99f361.png\";","module.exports = __webpack_public_path__ + \"static/media/special.09f43aed.png\";","module.exports = __webpack_public_path__ + \"static/media/star.63ba072a.png\";","module.exports = __webpack_public_path__ + \"static/media/triforce.bff35bea.png\";","module.exports = __webpack_public_path__ + \"static/media/yoshi.2202dd48.png\";","import firebase from 'firebase';\n\nconst config = {\n    apiKey: \"AIzaSyCUVExBS8-J9U458sNtB95fwzQNBPSl5Rk\",\n    authDomain: \"mctracker-42d0f.firebaseapp.com\",\n    databaseURL: \"https://mctracker-42d0f.firebaseio.com\",\n    projectId: \"mctracker-42d0f\",\n    storageBucket: \"mctracker-42d0f.appspot.com\",\n    messagingSenderId: \"218378060918\"\n};\n\nfirebase.initializeApp(config);\n\nexport const provider = new firebase.auth.GoogleAuthProvider();\nexport const auth = firebase.auth();\nexport default firebase;\n","import React, { Component } from 'react';\n\nimport firebase from '../data/Firebase.js';\n\nimport '../styles/enterScore.css';\n\nimport banana from '../images/cups/banana.png'\nimport bell from '../images/cups/bell.png'\nimport crossing from '../images/cups/crossing.png'\nimport flower from '../images/cups/flower.png'\nimport leaf from '../images/cups/leaf.png'\nimport lightning from '../images/cups/lightning.png'\nimport mushroom from '../images/cups/mushroom.png'\nimport shell from '../images/cups/shell.png'\nimport special from '../images/cups/special.png'\nimport star from '../images/cups/star.png'\nimport triforce from '../images/cups/triforce.png'\nimport yoshi from '../images/cups/yoshi.png'\n\nimport {\n    FormGroup,\n    ControlLabel,\n    FormControl,\n    HelpBlock,\n    Grid,\n    Row,\n    Col,\n    Button\n} from 'react-bootstrap';\n\nconst CupRow = (props) => {\n    if (props && props.cups && props.cups.length) {\n        return props.cups.map((cup)=>{\n            return <Col\n                xs={4}\n                sm={2}\n                key={cup[1]}\n                onClick={()=>{props.selectCup(cup[1])}}\n                style={{\n                    padding: '1rem',\n                    borderRadius: '5px',\n                    backgroundColor: cup[1] === props.selectedCup ? 'lightskyblue' : 'transparent',\n                    textAlign: 'center',\n                    cursor: 'pointer'\n                }}\n            >\n                <img src={cup[0]}\n                    className=\"cups\"\n                />\n            </Col>;\n        });\n    } else {\n        return 'null';\n    }\n    //\n}\n\nclass EnterScore extends Component {\n  constructor(props) {\n      super(props);\n\n      this.handlePointsChange = this.handlePointsChange.bind(this);\n      this.selectCup = this.selectCup.bind(this);\n\n      this.state = {\n          cupValue: null\n      };\n  }\n\n  saveScore() {\n      let itemsRef = firebase.database().ref('scores/');\n\n      if (this.state.pointsValue <= 60 && this.state.cupValue) {\n          itemsRef.push({\n              uid: this.props.userInfo.uid,\n              points: this.state.pointsValue,\n              cup: this.state.cupValue,\n              date: new Date(),\n              username: this.props.userInfo.displayName,\n              photoURL: this.props.userInfo.photoURL\n          });\n\n          this.props.toggleAddScore();\n      }\n  }\n\n  handlePointsChange(e) {\n      this.setState({ pointsValue: e.target.value });\n  }\n\n  selectCup(cup) {\n      this.setState({ cupValue: cup });\n  }\n\n  getPointsValidationState() {\n      const pointsValue = parseInt(this.state.pointsValue);\n      if (pointsValue > 60 || pointsValue < 4) {\n          return 'error';\n      } else if (pointsValue !== null ) {\n          return 'success';\n      } else {\n          return null;\n      }\n  }\n\n  render() {\n    return (\n        <form style={{margin: '2rem 0'}}>\n            <Grid>\n                <Row>\n                    <Col xs={12} sm={1}>\n                        <FormGroup validationState={this.getPointsValidationState()}>\n                            <ControlLabel>Points</ControlLabel>\n                            <FormControl\n                                type=\"text\"\n                                value={this.state.prixPoints}\n                                placeholder=\"\"\n                                onChange={this.handlePointsChange}\n                                bsSize=\"large\"\n                            />\n                        </FormGroup>\n                    </Col>\n                    <Col xs={12} sm={11}>\n                        <Row>\n                            <CupRow\n                                selectCup={this.selectCup}\n                                selectedCup={this.state.cupValue}\n                                cups={[\n                                    [mushroom,'mushroom'],\n                                    [flower,'flower'],\n                                    [star,'star'],\n                                    [special,'special'],\n                                    [yoshi,'yoshi'],\n                                    [crossing,'crossing']\n                                ]}\n                            />\n                        </Row>\n                        <Row>\n                            <CupRow\n                                selectCup={this.selectCup}\n                                selectedCup={this.state.cupValue}\n                                cups={[\n                                    [shell,'shell'],\n                                    [banana,'banana'],\n                                    [leaf,'leaf'],\n                                    [lightning,'lightning'],\n                                    [triforce,'triforce'],\n                                    [bell,'bell']\n                                ]} />\n                        </Row>\n                    </Col>\n                    <Col xs={12} style={{ textAlign:'right', marginTop: '2rem' }}>\n                        <Button\n                            bsStyle=\"danger\"\n                            onClick={() => { this.props.toggleAddScore() }}\n                            style={{marginRight: '1rem'}}\n                        >\n                            Cancel\n                        </Button>\n                        <Button\n                            bsStyle=\"primary\"\n                            onClick={() => { this.saveScore() }}\n                        >\n                            Add Score\n                        </Button>\n                    </Col>\n                </Row>\n            </Grid>\n        </form>\n    );\n  }\n}\n\nexport default EnterScore;\n","import React, { Component } from 'react';\n\nimport firebase from '../data/Firebase.js';\n\nimport { Line } from 'react-chartjs-2';\n\nimport { Popover, OverlayTrigger } from 'react-bootstrap';\n\nconst CupArray = (props) => {\n    return props.cups.map((cup) => {\n        return <span>{cup}</span>\n    })\n}\n\nconst ScoreToolTip = (score) => {\n    let scores = score.scores\n    return (\n        <Popover id=\"popover-trigger-hover-focus\" title={score.username+\" score details\"}>\n            Top score: <b>{ Math.max.apply(Math, scores) }</b><br/>\n            Games played: { scores.length }<br/>\n            Last 10 scores:\n            <ul>\n                {\n                    // Returns the latest 10 scores\n                    scores.slice(0, Math.min(10, scores.length)).map((value, index) => {\n                        return (\n                            <li key={index} >\n                                {value.replace(/^0+/, '')}\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        </Popover>\n    )\n}\nconst Scores = (props) => {\n    if (props.length === 0) {\n        return '...loading'\n    } else {\n        return  (\n            props.scores.map((score,  i) => {\n                let labels = [];\n                let placement = i > 3 ? 'top' : 'bottom';\n                for (var j = 0; j < score.scores.length; j++) {\n                    labels.push(score.scores[j]);\n                }\n                return (\n                    <OverlayTrigger trigger={['hover', 'focus']} placement={placement} overlay={ScoreToolTip\n                        (score)} key={i}>\n                        <tr >\n                            <th scope=\"row\">{i+1}</th>\n                            <td>{score.username}</td>\n                            <td>{score.avgScore.toFixed(1)}</td>\n                            <td>{score.avgLast10.toFixed(1)}</td>\n                            <td style={{\n                                width: '70px',\n                                height: '50px'\n                            }} className=\"hidden-xs\">\n                                <Line\n                                    width={200}\n                                    height={80}\n                                    data={{\n                                        labels: labels,\n                                        datasets: [{\n                                          label: 'All scores',\n                                          data: score.scores,\n                                          backgroundColor: \"#ff5722\"\n                                        }]\n                                    }}\n                                    options={{\n                                        responsive: true,\n                                        legend: {\n                                            display: false\n                                        },\n                                        scales:{\n                                            xAxes: [{\n                                                display: false //this will remove all the x-axis grid lines\n                                            }]\n                                        }\n                                    }}\n                                />\n                            </td>\n                        </tr>\n                    </OverlayTrigger>\n                )\n            })\n        );\n    }\n};\n\nclass LeaderBoard extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n            scores: []\n        };\n    }\n\n    componentDidMount() {\n        const scoresData = firebase.database().ref('scores/');\n        const userDataRef = firebase.database().ref('users/');\n        let userData = [];\n\n        userDataRef.on('value', (snapshot) => {\n            userData = snapshot.val();\n        })\n\n        scoresData.on('value', (snapshot) => {\n            const data = snapshot.val();\n            const keys = Object.keys(data);\n            let scores = [];\n            let uids = [];\n            let players = [];\n            let all = [];\n            let windowGames;\n            let windowTotal = 0;\n\n            keys.forEach((k) => {\n                scores.push(data[k]);\n            });\n\n            scores.map((s) => {\n                let un = userData[s.uid] ? userData[s.uid].username : s.username;\n                if (uids.indexOf(s.uid) === -1){\n                    uids.push(s.uid);\n                    players.push(un)\n                }\n            });\n\n            uids.map((player, i) => {\n                var parsedStats = {\n                    scores:[],\n                    cups:[],\n                    avgScore: 0,\n                    avgLast10: 0,\n                    username: players[i]\n                };\n\n                scores.map((s)=>{\n                \tif (s.uid === uids[i]) {\n                \t    parsedStats['scores'].push(s.points);\n                        parsedStats['cups'].push(s.cup);\n                \t}\n                });\n\n                parsedStats['avgScore'] = parsedStats['scores'].reduce((a,b) => { return parseInt(a) + parseInt(b);  }) /  parsedStats['scores'].length;\n\n                // Avg score over last 10 games\n\t\t\t\twindowGames = parsedStats['scores'].length > 10 ? 10 : parsedStats['scores'].length;\n\t\t\t\twindowTotal = 0;\n\t\t\t\tfor (var i = 0; i < windowGames; i++) {\n                    windowTotal = windowTotal + parseInt(parsedStats['scores'][ parsedStats['scores'].length - 1 - i]);\n                }\n                parsedStats['avgLast10'] = windowTotal/windowGames;\n\n\t\t\t\tparsedStats['avgScore'] = parsedStats['scores'].reduce((a,b) => { return parseInt(a) + parseInt(b);  }) /  parsedStats['scores'].length;\n                all.push(parsedStats);\n            });\n\n            this.setState({\n                scores: all.sort((a, b) => {\n                    if (a.avgScore > b.avgScore) {\n                        return -1;\n                    } else if (a.avgScore < b.avgScore) {\n                        return 1;\n                    } else {\n                        return 0;\n                    }\n                })\n            })\n\n        });\n\n    }\n\n    render() {\n        return  <div>\n            <table className=\"table table-striped\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Rank</th>\n                  <th scope=\"col\">Player</th>\n                  <th scope=\"col\">Average Score</th>\n                  <th scope=\"col\">Last 10</th>\n                  <th scope=\"col\" className=\"hidden-xs\"></th>\n                </tr>\n              </thead>\n              <tbody>\n                <Scores scores={this.state.scores} />\n              </tbody>\n            </table>\n        </div>\n    }\n}\n\nexport default LeaderBoard;\n","import React, { Component } from 'react';\n\nimport firebase from '../data/Firebase.js';\n\nimport {\n    Modal,\n    Button,\n    Row,\n    Col,\n    FormGroup,\n    ControlLabel,\n    FormControl\n} from 'react-bootstrap';\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            uid: props.uid,\n            username: ''\n        }\n    }\n    componentWillMount() {\n        let userInfo = firebase.database().ref('users/' + this.state.uid);\n\n        userInfo.on('value', (snapshot) => {\n            userInfo = snapshot.val();\n\n            if (userInfo) {\n                this.setState({\n                    username: userInfo.username\n                })\n            }\n        });\n    }\n    handleUsernameChange(e) {\n        this.setState({\n            username: e.target.value\n        })\n    }\n    saveUsername() {\n        let userInfo = firebase.database().ref('users/' + this.state.uid);\n        let userInfoUpdate = {}\n\n        userInfo.set({\n            username: this.state.username\n        }).then(()=>{\n            this.props.toggleProfile();\n        });\n    }\n    render() {\n        return (\n            <Modal\n              show={true}\n              bsSize=\"large\"\n              aria-labelledby=\"contained-modal-title-lg\"\n            >\n              <Modal.Header>\n                  <Modal.Title id=\"contained-modal-title-lg\">My Profile</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                  <Row>\n                      <Col xs={12}>\n                          <FormGroup validationState={null}>\n                              <ControlLabel>Username</ControlLabel>\n                              <FormControl\n                                  type=\"text\"\n                                  value={this.state.username}\n                                  onChange={(e)=>{this.handleUsernameChange(e)}}\n                                  bsSize=\"large\"\n                              />\n                          </FormGroup>\n                      </Col>\n                  </Row>\n              </Modal.Body>\n              <Modal.Footer>\n                  <Button onClick={()=>{ this.props.toggleProfile() }}>Close</Button>\n                  <Button bsStyle=\"primary\" onClick={()=>{ this.saveUsername() }}>Save</Button>\n              </Modal.Footer>\n            </Modal>\n        )\n    }\n}\n\nexport default Profile;\n","import React, { Component } from 'react';\n\nimport './App.css';\n\nimport firebase, { auth, provider } from './data/Firebase.js';\n\nimport {\n    Button,\n    ButtonGroup,\n    Row,\n    Col\n} from 'react-bootstrap';\n\nimport EnterScore from './components/enterScore.js';\nimport LeaderBoard  from './components/leaderBoard.js';\nimport Profile from './components/profile.js';\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            userInfo: null,\n            showAddScore: false,\n            showProfile: false,\n            userInfo: null\n        }\n    }\n    componentDidMount() {\n        !this.state.userInfo && auth.onAuthStateChanged((user) => {\n            user && this.setUser(user);\n        });\n    }\n    login() {\n        auth.signInWithPopup(provider);\n    }\n    setUser(userInfo) {\n        !this.state.userInfo && this.setState({ userInfo: userInfo });\n    }\n    toggleAddScore() {\n        this.setState({\n            showAddScore: !this.state.showAddScore\n        });\n    }\n    toggleProfile() {\n        this.setState({\n            showProfile: !this.state.showProfile\n        })\n    }\n    render() {\n        return (\n            <div className=\"App container\">\n                <header className=\"App-header\">\n                    <Row>\n                        <Col xs={6} sm={8}>\n                            <h1>Mario Kart Tracker</h1>\n                        </Col>\n                        <Col xs={4} sm={2} className=\"align-right\">\n                            {!this.state.userInfo && <Button bsStyle=\"primary\" onClick={() => {this.login()}}>Log In</Button>}\n                            {\n                                this.state.userInfo &&\n                                <ButtonGroup>\n                                    <Button bsStyle=\"primary\" onClick={() => {this.toggleAddScore()}}>Add Score</Button>\n                                    <Button bsStyle=\"info\" onClick={() => { this.toggleProfile() }}>Profile</Button>\n                                </ButtonGroup>\n                            }\n                        </Col>\n                        <Col xs={2} sm={2} className=\"align-right\">\n                            {\n                                this.state.userInfo &&\n                                <img\n                                    style={{\n                                        margin: '1rem',\n                                        width: '50px',\n                                        height: '50px',\n                                        borderRadius: '50%'\n                                    }}\n                                    src={this.state.userInfo.photoURL}\n                                />\n                            }\n                        </Col>\n                    </Row>\n                </header>\n                {\n                    this.state.userInfo &&\n                    <div>\n                        {\n                            this.state.showAddScore &&\n                            <EnterScore\n                                userInfo={this.state.userInfo}\n                                toggleAddScore={this.toggleAddScore.bind(this)}\n                            />\n                        }\n                    </div>\n                }\n                <LeaderBoard />\n                {\n                    this.state.showProfile &&\n                    <Profile\n                        uid={this.state.userInfo.uid}\n                        toggleProfile={this.toggleProfile.bind(this)}\n                    />\n                }\n\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}