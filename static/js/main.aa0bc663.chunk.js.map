{"version":3,"sources":["images/cups/banana.png","images/cups/bell.png","images/cups/crossing.png","images/cups/flower.png","images/cups/leaf.png","images/cups/lightning.png","images/cups/mushroom.png","images/cups/shell.png","images/cups/special.png","images/cups/star.png","images/cups/triforce.png","images/cups/yoshi.png","data/Firebase.js","data/Cups.js","components/enterScore.js","components/leaderBoard.js","components/profile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","provider","auth","GoogleAuthProvider","Cups","mushroom","flower","star","special","yoshi","crossing","shell","banana","leaf","lightning","triforce","bell","CupRow","props","cups","length","map","cup","react_default","a","createElement","Col","xs","key","onClick","selectCup","className","selectedCup","src","EnterScore","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handlePointsChange","bind","assertThisInitialized","state","cupValue","itemsRef","Firebase","database","ref","pointsValue","push","uid","userInfo","points","date","Date","username","displayName","photoURL","toggleAddScore","e","setState","target","value","parseInt","_this2","style","margin","Grid","Row","sm","FormGroup","validationState","getPointsValidationState","ControlLabel","FormControl","type","prixPoints","placeholder","onChange","bsSize","enterScore_CupRow","textAlign","marginTop","Button","bsStyle","marginRight","saveScore","Component","Scores","scores","score","i","labels","placement","j","OverlayTrigger","trigger","overlay","Popover","id","title","Math","max","apply","slice","reverse","index","replace","ScoreToolTip","scope","avgScore","toFixed","avgLast10","width","height","es","data","datasets","label","backgroundColor","options","responsive","legend","display","scales","xAxes","LeaderBoard","scoresData","userData","on","snapshot","windowGames","val","keys","uids","players","all","windowTotal","forEach","k","s","un","indexOf","player","parsedStats","reduce","b","sort","leaderBoard_Scores","ScoresByCup","scoreKeys","parsedScores","thisUsersScores","scoresByCup","filter","c","avg","cupScores","sbc","console","log","arguments","undefined","padding","Profile","_this3","set","then","toggleProfile","_this4","Modal","show","aria-labelledby","Header","Title","Body","handleUsernameChange","profile_ScoresByCup","Footer","saveUsername","App","defineProperty","showAddScore","showProfile","onAuthStateChanged","user","setUser","signInWithPopup","login","flexDirection","ButtonGroup","borderRadius","enterScore","leaderBoard","profile","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aa0bc663.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/banana.b99b8ad2.png\";","module.exports = __webpack_public_path__ + \"static/media/bell.fef4ae6e.png\";","module.exports = __webpack_public_path__ + \"static/media/crossing.866816b0.png\";","module.exports = __webpack_public_path__ + \"static/media/flower.b1b2b376.png\";","module.exports = __webpack_public_path__ + \"static/media/leaf.c0c3172d.png\";","module.exports = __webpack_public_path__ + \"static/media/lightning.673806fd.png\";","module.exports = __webpack_public_path__ + \"static/media/mushroom.7d0b0a51.png\";","module.exports = __webpack_public_path__ + \"static/media/shell.9e99f361.png\";","module.exports = __webpack_public_path__ + \"static/media/special.09f43aed.png\";","module.exports = __webpack_public_path__ + \"static/media/star.63ba072a.png\";","module.exports = __webpack_public_path__ + \"static/media/triforce.bff35bea.png\";","module.exports = __webpack_public_path__ + \"static/media/yoshi.2202dd48.png\";","import firebase from 'firebase';\n\nconst config = {\n    apiKey: \"AIzaSyCUVExBS8-J9U458sNtB95fwzQNBPSl5Rk\",\n    authDomain: \"mctracker-42d0f.firebaseapp.com\",\n    databaseURL: \"https://mctracker-42d0f.firebaseio.com\",\n    projectId: \"mctracker-42d0f\",\n    storageBucket: \"mctracker-42d0f.appspot.com\",\n    messagingSenderId: \"218378060918\"\n};\n\nfirebase.initializeApp(config);\n\nexport const provider = new firebase.auth.GoogleAuthProvider();\nexport const auth = firebase.auth();\nexport default firebase;\n","import banana from '../images/cups/banana.png';\nimport bell from '../images/cups/bell.png';\nimport crossing from '../images/cups/crossing.png';\nimport flower from '../images/cups/flower.png';\nimport leaf from '../images/cups/leaf.png';\nimport lightning from '../images/cups/lightning.png';\nimport mushroom from '../images/cups/mushroom.png';\nimport shell from '../images/cups/shell.png';\nimport special from '../images/cups/special.png';\nimport star from '../images/cups/star.png';\nimport triforce from '../images/cups/triforce.png';\nimport yoshi from '../images/cups/yoshi.png';\n\nexport default [\n    [mushroom,'mushroom'],\n    [flower,'flower'],\n    [star,'star'],\n    [special,'special'],\n    [yoshi,'yoshi'],\n    [crossing,'crossing'],\n    [shell,'shell'],\n    [banana,'banana'],\n    [leaf,'leaf'],\n    [lightning,'lightning'],\n    [triforce,'triforce'],\n    [bell,'bell']\n]\n","import React, { Component } from 'react';\n\nimport Firebase from '../data/Firebase.js';\nimport Cups from '../data/Cups.js';\n\nimport {\n    FormGroup,\n    ControlLabel,\n    FormControl,\n    HelpBlock,\n    Grid,\n    Row,\n    Col,\n    Button\n} from 'react-bootstrap';\n\nconst CupRow = (props) => {\n    if (props && props.cups && props.cups.length) {\n        return props.cups.map((cup)=>{\n            return <Col\n                xs={2}\n                key={cup[1]}\n                onClick={()=>{props.selectCup(cup[1])}}\n                className={ cup[1] === props.selectedCup ? 'cup-row active' : 'cup-row' }\n            >\n                <img src={cup[0]} className=\"cup-image\" />\n            </Col>;\n        });\n    } else {\n        return 'null';\n    }\n    //\n}\n\nclass EnterScore extends Component {\n  constructor(props) {\n      super(props);\n\n      this.handlePointsChange = this.handlePointsChange.bind(this);\n      this.selectCup = this.selectCup.bind(this);\n\n      this.state = {\n          cupValue: null\n      };\n  }\n\n  saveScore() {\n      let itemsRef = Firebase.database().ref('scores/');\n\n      if (this.state.pointsValue <= 60 && this.state.cupValue) {\n          itemsRef.push({\n              uid: this.props.userInfo.uid,\n              points: this.state.pointsValue,\n              cup: this.state.cupValue,\n              date: new Date(),\n              username: this.props.userInfo.displayName,\n              photoURL: this.props.userInfo.photoURL\n          });\n\n          this.props.toggleAddScore();\n      }\n  }\n\n  handlePointsChange(e) {\n      this.setState({ pointsValue: e.target.value });\n  }\n\n  selectCup(cup) {\n      this.setState({ cupValue: cup });\n  }\n\n  getPointsValidationState() {\n      const pointsValue = parseInt(this.state.pointsValue);\n      if (pointsValue > 60 || pointsValue < 4) {\n          return 'error';\n      } else if (pointsValue !== null ) {\n          return 'success';\n      } else {\n          return null;\n      }\n  }\n\n  render() {\n    return (\n        <form style={{margin: '2rem 0'}}>\n            <Grid>\n                <Row>\n                    <Col xs={12} sm={1}>\n                        <FormGroup validationState={this.getPointsValidationState()}>\n                            <ControlLabel>Points</ControlLabel>\n                            <FormControl\n                                type=\"text\"\n                                value={this.state.prixPoints}\n                                placeholder=\"\"\n                                onChange={this.handlePointsChange}\n                                bsSize=\"large\"\n                            />\n                        </FormGroup>\n                    </Col>\n                    <Col xs={12} sm={11}>\n                        <Row>\n                            <CupRow\n                                selectCup={this.selectCup}\n                                selectedCup={this.state.cupValue}\n                                cups={Cups}\n                            />\n                        </Row>\n                    </Col>\n                    <Col xs={12} style={{ textAlign:'right', marginTop: '2rem' }}>\n                        <Button\n                            bsStyle=\"danger\"\n                            onClick={() => { this.props.toggleAddScore() }}\n                            style={{marginRight: '1rem'}}\n                        >\n                            Cancel\n                        </Button>\n                        <Button\n                            bsStyle=\"primary\"\n                            onClick={() => { this.saveScore() }}\n                        >\n                            Add Score\n                        </Button>\n                    </Col>\n                </Row>\n            </Grid>\n        </form>\n    );\n  }\n}\n\nexport default EnterScore;\n","import React, { Component } from 'react';\n\nimport firebase from '../data/Firebase.js';\n\nimport { Line } from 'react-chartjs-2';\n\nimport { Popover, OverlayTrigger } from 'react-bootstrap';\n\nconst CupArray = (props) => {\n    return props.cups.map((cup) => {\n        return <span>{cup}</span>\n    })\n}\n\nconst ScoreToolTip = (score) => {\n    let scores = score.scores\n    return (\n        <Popover id=\"popover-trigger-hover-focus\" title={score.username+\" score details\"}>\n            Top score: <b>{ Math.max.apply(Math, scores) }</b><br/>\n            Games played: { scores.length }<br/>\n            Last 10 scores:\n            <ul>\n                {\n                    // Returns the latest 10 scores\n                    scores.slice(Math.max(scores.length - 10, 0)).reverse().map((value, index) => {\n                        return (\n                            <li key={index} >\n                                {value.replace(/^0+/, '')}\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        </Popover>\n    )\n}\nconst Scores = (props) => {\n    if (props.length === 0) {\n        return '...loading'\n    } else {\n        return  (\n            props.scores.map((score,  i) => {\n                let labels = [];\n                let placement = i > 3 ? 'top' : 'bottom';\n                for (var j = 0; j < score.scores.length; j++) {\n                    labels.push(score.scores[j]);\n                }\n                return (\n                    <OverlayTrigger trigger={['hover', 'focus']} placement={placement} overlay={ScoreToolTip\n                        (score)} key={i}>\n                        <tr >\n                            <th scope=\"row\">{i+1}</th>\n                            <td>{score.username}</td>\n                            <td>{score.avgScore.toFixed(1)}</td>\n                            <td>{score.avgLast10.toFixed(1)}</td>\n                            <td style={{\n                                width: '70px',\n                                height: '50px'\n                            }} className=\"hidden-xs\">\n                                <Line\n                                    width={200}\n                                    height={80}\n                                    data={{\n                                        labels: labels,\n                                        datasets: [{\n                                          label: 'All scores',\n                                          data: score.scores,\n                                          backgroundColor: \"#ff5722\"\n                                        }]\n                                    }}\n                                    options={{\n                                        responsive: true,\n                                        legend: {\n                                            display: false\n                                        },\n                                        scales:{\n                                            xAxes: [{\n                                                display: false //this will remove all the x-axis grid lines\n                                            }]\n                                        }\n                                    }}\n                                />\n                            </td>\n                        </tr>\n                    </OverlayTrigger>\n                )\n            })\n        );\n    }\n};\n\nclass LeaderBoard extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n            scores: []\n        };\n    }\n\n    componentDidMount() {\n        const scoresData = firebase.database().ref('scores/');\n        const userDataRef = firebase.database().ref('users/');\n        let userData = this.props.scores;\n\n        scoresData.on('value', (snapshot) => {\n            const data = snapshot.val();\n            const keys = Object.keys(data);\n            let scores = [];\n            let uids = [];\n            let players = [];\n            let all = [];\n            let windowGames;\n            let windowTotal = 0;\n\n            keys.forEach((k) => {\n                scores.push(data[k]);\n            });\n\n            scores.map((s) => {\n                let un = userData[s.uid] ? userData[s.uid].username : s.username;\n                if (uids.indexOf(s.uid) === -1){\n                    uids.push(s.uid);\n                    players.push(un)\n                }\n            });\n\n            uids.map((player, i) => {\n                var parsedStats = {\n                    scores:[],\n                    cups:[],\n                    avgScore: 0,\n                    avgLast10: 0,\n                    username: players[i]\n                };\n\n                scores.map((s)=>{\n                \tif (s.uid === uids[i]) {\n                \t    parsedStats['scores'].push(s.points);\n                        parsedStats['cups'].push(s.cup);\n                \t}\n                });\n\n                parsedStats['avgScore'] = parsedStats['scores'].reduce((a,b) => { return parseInt(a) + parseInt(b);  }) /  parsedStats['scores'].length;\n\n                // Avg score over last 10 games\n\t\t\t\twindowGames = parsedStats['scores'].length > 10 ? 10 : parsedStats['scores'].length;\n\t\t\t\twindowTotal = 0;\n\t\t\t\tfor (var i = 0; i < windowGames; i++) {\n                    windowTotal = windowTotal + parseInt(parsedStats['scores'][ parsedStats['scores'].length - 1 - i]);\n                }\n                parsedStats['avgLast10'] = windowTotal/windowGames;\n\n\t\t\t\tparsedStats['avgScore'] = parsedStats['scores'].reduce((a,b) => { return parseInt(a) + parseInt(b);  }) /  parsedStats['scores'].length;\n                all.push(parsedStats);\n            });\n\n            this.setState({\n                scores: all.sort((a, b) => {\n                    if (a.avgScore > b.avgScore) {\n                        return -1;\n                    } else if (a.avgScore < b.avgScore) {\n                        return 1;\n                    } else {\n                        return 0;\n                    }\n                })\n            })\n\n        });\n\n    }\n\n    render() {\n        return  <div>\n            <table className=\"table table-striped\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Rank</th>\n                  <th scope=\"col\">Player</th>\n                  <th scope=\"col\">Average Score</th>\n                  <th scope=\"col\">Last 10</th>\n                  <th scope=\"col\" className=\"hidden-xs\"></th>\n                </tr>\n              </thead>\n              <tbody>\n                <Scores scores={this.state.scores} />\n              </tbody>\n            </table>\n        </div>\n    }\n}\n\nexport default LeaderBoard;\n","import React, { Component } from 'react';\n\nimport Firebase from '../data/Firebase.js';\nimport Cups from '../data/Cups.js';\n\nimport {\n    Modal,\n    Button,\n    Row,\n    Col,\n    FormGroup,\n    ControlLabel,\n    FormControl\n} from 'react-bootstrap';\n\nconst ScoresByCup = (props) => {\n    let scoreKeys = Object.keys(props.scores);\n    let parsedScores = [];\n    let thisUsersScores = [];\n    let scoresByCup = {};\n\n    scoreKeys.map(s => {\n        parsedScores.push(props.scores[s]);\n    });\n\n    thisUsersScores = parsedScores.filter(s => {\n        return s.uid === props.uid;\n    });\n\n    Cups.map(c => {\n        scoresByCup[c[1]] = thisUsersScores.filter(s => {\n            return s.cup === c[1]\n        });\n    });\n\n    return Cups.map(c => {\n        let cupScores = [];\n        let avg;\n\n        scoresByCup[c[1]].map(sbc => {\n            console.log(sbc);\n            cupScores.push(sbc.points);\n        });\n\n        avg = cupScores.length ? (cupScores.reduce((a = 0,b = 0) => parseInt(a) + parseInt(b)) / cupScores.length).toFixed(2) : 'none';\n\n\n        return (\n            <Col\n                xs={2}\n                key={c[1]}\n                className=\"cup-row\"\n                style={{\n                    padding: '2rem'\n                }}\n            >\n                <img src={[c[0]]} className=\"cup-image\" /><h3>{avg}</h3>\n            </Col>\n        )\n    })\n}\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            uid: props.uid,\n            username: ''\n        }\n    }\n    componentWillMount() {\n        let userInfo = Firebase.database().ref('users/' + this.state.uid);\n\n        userInfo.on('value', (snapshot) => {\n            userInfo = snapshot.val();\n\n            if (userInfo) {\n                this.setState({\n                    username: userInfo.username\n                })\n            }\n        });\n    }\n    handleUsernameChange(e) {\n        this.setState({\n            username: e.target.value\n        })\n    }\n    saveUsername() {\n        let userInfo = Firebase.database().ref('users/' + this.state.uid);\n        let userInfoUpdate = {}\n\n        userInfo.set({\n            username: this.state.username\n        }).then(()=>{\n            this.props.toggleProfile();\n        });\n    }\n    render() {\n        return (\n            <Modal\n              show={true}\n              bsSize=\"large\"\n              aria-labelledby=\"contained-modal-title-lg\"\n            >\n              <Modal.Header>\n                  <Modal.Title id=\"contained-modal-title-lg\">My Profile</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                  <Row>\n                      <Col xs={12}>\n                          <h2>Details</h2>\n                          <FormGroup validationState={null}>\n                              <ControlLabel>Username</ControlLabel>\n                              <FormControl\n                                  type=\"text\"\n                                  value={this.state.username}\n                                  onChange={(e)=>{this.handleUsernameChange(e)}}\n                                  bsSize=\"large\"\n                              />\n                          </FormGroup>\n                      </Col>\n                      <Col xs={12}>\n                          <h2>Scores by cup</h2>\n                          <Row>\n                              <ScoresByCup\n                                  scores={this.props.scores}\n                                  uid={this.props.uid}\n                              />\n                          </Row>\n                      </Col>\n                  </Row>\n              </Modal.Body>\n              <Modal.Footer>\n                  <Button onClick={()=>{ this.props.toggleProfile() }}>Close</Button>\n                  <Button bsStyle=\"primary\" onClick={()=>{ this.saveUsername() }}>Save</Button>\n              </Modal.Footer>\n            </Modal>\n        )\n    }\n}\n\nexport default Profile;\n","import React, { Component } from 'react';\n\nimport './App.css';\n\nimport firebase, { auth, provider } from './data/Firebase.js';\n\nimport {\n    Button,\n    ButtonGroup,\n    Row,\n    Col\n} from 'react-bootstrap';\n\nimport EnterScore from './components/enterScore.js';\nimport LeaderBoard  from './components/leaderBoard.js';\nimport Profile from './components/profile.js';\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            userInfo: null,\n            showAddScore: false,\n            showProfile: false,\n            userInfo: null\n        }\n    }\n    componentDidMount() {\n        !this.state.userInfo && auth.onAuthStateChanged((user) => {\n            user && this.setUser(user);\n        });\n\n        firebase.database().ref('scores/').on('value', (snapshot) => {\n            if (snapshot) {\n                this.setState({\n                    scoresData: snapshot.val()\n                });\n            }\n        });\n    }\n    login() {\n        auth.signInWithPopup(provider);\n    }\n    setUser(userInfo) {\n        !this.state.userInfo && this.setState({ userInfo: userInfo });\n    }\n    toggleAddScore() {\n        this.setState({\n            showAddScore: !this.state.showAddScore\n        });\n    }\n    toggleProfile() {\n        this.setState({\n            showProfile: !this.state.showProfile\n        })\n    }\n    render() {\n        return (\n            <div className=\"App container\">\n                <header className=\"App-header\">\n                    <Row>\n                        <Col xs={12} sm={8}>\n                            <h1>Mario Kart Tracker</h1>\n                        </Col>\n                        <Col xs={12} sm={4}>\n                            {!this.state.userInfo && <Button bsStyle=\"primary\" onClick={() => {this.login()}}>Log In</Button>}\n                            {\n                                this.state.userInfo &&\n                                <div\n                                    className=\"align-right\"\n                                    style={{\n                                        display: 'flex',\n                                        flexDirection: 'row'\n                                    }}>\n                                    <ButtonGroup>\n                                        <Button bsStyle=\"primary\" onClick={() => {this.toggleAddScore()}}>Add Score</Button>\n                                        <Button bsStyle=\"info\" onClick={() => { this.toggleProfile() }}>Profile</Button>\n                                    </ButtonGroup>\n                                    <img\n                                        style={{\n                                            margin: '1rem',\n                                            width: '50px',\n                                            height: '50px',\n                                            borderRadius: '50%'\n                                        }}\n                                        src={this.state.userInfo.photoURL}\n                                    />\n                                </div>\n                            }\n                        </Col>\n                    </Row>\n                </header>\n                {\n                    this.state.userInfo &&\n                    <div>\n                        {\n                            this.state.showAddScore &&\n                            <EnterScore\n                                userInfo={this.state.userInfo}\n                                toggleAddScore={this.toggleAddScore.bind(this)}\n                            />\n                        }\n                    </div>\n                }\n                {\n                    this.state.scoresData &&\n                    <LeaderBoard scores={this.state.scoresData} />\n                }\n                {\n                    this.state.showProfile &&\n                    <Profile\n                        uid={this.state.userInfo.uid}\n                        scores={this.state.scoresData}\n                        toggleProfile={this.toggleProfile.bind(this)}\n                    />\n                }\n\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}